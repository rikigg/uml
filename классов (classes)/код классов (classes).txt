@startuml

class Questionnaire {
    - id: int
    - questions: list
    + collect_data(): dict
}

class Student {
    - id: int
    - name: str
    - responses: dict
    + fill_questionnaire(): dict
}

class Teacher {
    - id: int
    - name: str
    - responses: dict
    + fill_questionnaire(): dict
}

class Cluster {
    - id: int
    - students: list
    + create_clusters(data: list): list
}

class MachineLearningModel {
    - model: object
    + train_model(data: list)
    + predict(data: dict): str
}

class RecommendationSystem {
    - model: MachineLearningModel
    + provide_recommendation(student: Student): str
}

class DataProcessor {
    - raw_data: list
    + process_data(data: list): list
}

class GigaChatAPI {
    - api_key: str
    + get_recommendation(data: dict): str
}

Questionnaire <|-- Student
Questionnaire <|-- Teacher
Cluster --> Student : "Contains"
MachineLearningModel --> Cluster : "Uses"
RecommendationSystem --> MachineLearningModel : "Uses"
DataProcessor --> Questionnaire : "Processes"
RecommendationSystem --> GigaChatAPI : "Interacts with"

@enduml
